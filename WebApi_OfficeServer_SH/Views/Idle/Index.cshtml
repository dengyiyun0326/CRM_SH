@model List<WebApi_OfficeServer_SH.Models.CaseWellness>
@{ 
    string[] aliasList = new string[] {"REYU", "YOUWAN", "CATWANG", "XIALIA", "KANCH", "MIHUI", "TINGYA", "WEIGE", "HZHOU", "DAYWANG", "YINILI", "SHAGUO", "MINZHO"}; <!--0 ~ 12-->
    string[] nameList = new string[] { "Rene Yu", "Birney Wang", "Catherine Wang", "Xiao Liang", "Kang Chen", "Midy Hui", "Bruce Yang", "Fish Ge", "Hongtao Zhou", "Will Wang", "Cassie Li", "David Guo", "Ming Zhou" };
}
<div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
    <!--0-->
    <div class="panel panel-default">
        <div class="panel-heading" role="tab" id="headingOne">
            <h4 class="panel-title">
                <a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseOne" aria-expanded="false" aria-controls="collapseOne">
                    @nameList[0] - Case count: @Model.Where(c => c.OwnerAlias == aliasList[0]).Count()
                </a>
            </h4>
        </div>
        <div id="collapseOne" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingOne">
            <div class="panel-body">
                <h3 class="text-center" style="color:darkblue">Pending CTS</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[0] && m.WaitState == "Pending CTS"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                <h3 class="text-center" style="color:darkblue">Pending Customer</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[0] && m.WaitState == "Pending Customer"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                <h3 class="text-center" style="color:darkblue">Pending Development</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[0] && m.WaitState == "Pending Development"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Solution Delivered - Pending confirmation</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[0] && m.WaitState == "Solution Delivered - Pending Confirmation"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Solution Delivered - Solution Confirmed</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[0] && m.WaitState == "Solution Delivered - Solution Confirmed"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    </div>

    <!--1-->
    <div class="panel panel-default">
        <div class="panel-heading" role="tab" id="headingTwo">
            <h4 class="panel-title">
                <a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                    @nameList[1] - Case count: @Model.Where(c => c.OwnerAlias == aliasList[1]).Count()
                </a>
            </h4>
        </div>
        <div id="collapseTwo" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingTwo">
            <div class="panel-body">
                                <h3 class="text-center" style="color:darkblue">Pending CTS</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[1] && m.WaitState == "Pending CTS"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Pending Customer</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[1] && m.WaitState == "Pending Customer"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Pending Development</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[1] && m.WaitState == "Pending Development"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Solution Delivered - Pending Confirmation</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[1] && m.WaitState == "Solution Delivered - Pending Confirmation"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Solution Delivered - Solution Confirmed</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[1] && m.WaitState == "Solution Delivered - Solution Confirmed"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    </div>

    <!--2-->
    <div class="panel panel-default">
        <div class="panel-heading" role="tab" id="headingThree">
            <h4 class="panel-title">
                <a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
                    @nameList[2] - Case count: @Model.Where(c => c.OwnerAlias == aliasList[2]).Count()
                </a>
            </h4>
        </div>
        <div id="collapseThree" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingThree">
            <div class="panel-body">
                                <h3 class="text-center" style="color:darkblue">Pending CTS</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[2] && m.WaitState == "Pending CTS"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Pending Customer</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[2] && m.WaitState == "Pending Customer"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Pending Development</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[2] && m.WaitState == "Pending Development"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Solution Delivered - Pending Confirmation</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[2] && m.WaitState == "Solution Delivered - Pending Confirmation"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Solution Delivered - Solution Confirmed</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[2] && m.WaitState == "Solution Delivered - Solution Confirmed"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    </div>

    <!--3-->
    <div class="panel panel-default">
        <div class="panel-heading" role="tab" id="heading4">
            <h4 class="panel-title">
                <a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#collapse4" aria-expanded="false" aria-controls="collapse4">
                    @nameList[3] - Case count: @Model.Where(c => c.OwnerAlias == aliasList[3]).Count()
                </a>
            </h4>
        </div>
        <div id="collapse4" class="panel-collapse collapse" role="tabpanel" aria-labelledby="heading4">
            <div class="panel-body">
                                <h3 class="text-center" style="color:darkblue">Pending CTS</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[3] && m.WaitState == "Pending CTS"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Pending Customer</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[3] && m.WaitState == "Pending Customer"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Pending Development</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[3] && m.WaitState == "Pending Development"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Solution Delivered - Pending Confirmation</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[3] && m.WaitState == "Solution Delivered - Pending Confirmation"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Solution Delivered - Solution Confirmed</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[3] && m.WaitState == "Solution Delivered - Solution Confirmed"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    </div>

    <!--4-->
    <div class="panel panel-default">
        <div class="panel-heading" role="tab" id="heading5">
            <h4 class="panel-title">
                <a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#collapse5" aria-expanded="false" aria-controls="collapse5">
                    @nameList[4] - Case count: @Model.Where(c => c.OwnerAlias == aliasList[4]).Count()
                </a>
            </h4>
        </div>
        <div id="collapse5" class="panel-collapse collapse" role="tabpanel" aria-labelledby="heading5">
            <div class="panel-body">
                                <h3 class="text-center" style="color:darkblue">Pending CTS</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[4] && m.WaitState == "Pending CTS"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Pending Customer</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[4] && m.WaitState == "Pending Customer"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Pending Development</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[4] && m.WaitState == "Pending Development"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Solution Delivered - Pending Confirmation</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[4] && m.WaitState == "Solution Delivered - Pending Confirmation"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Solution Delivered - Solution Confirmed</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[4] && m.WaitState == "Solution Delivered - Solution Confirmed"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    </div>

    <!--5-->
    <div class="panel panel-default">
        <div class="panel-heading" role="tab" id="heading6">
            <h4 class="panel-title">
                <a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#collapse6" aria-expanded="false" aria-controls="collapse6">
                    @nameList[5] - Case count: @Model.Where(c => c.OwnerAlias == aliasList[5]).Count()
                </a>
            </h4>
        </div>
        <div id="collapse6" class="panel-collapse collapse" role="tabpanel" aria-labelledby="heading6">
            <div class="panel-body">
                                <h3 class="text-center" style="color:darkblue">Pending CTS</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[5] && m.WaitState == "Pending CTS"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Pending Customer</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[5] && m.WaitState == "Pending Customer"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Pending Development</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[5] && m.WaitState == "Pending Development"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Solution Delivered - Pending Confirmation</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[5] && m.WaitState == "Solution Delivered - Pending Confirmation"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Solution Delivered - Solution Confirmed</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[5] && m.WaitState == "Solution Delivered - Solution Confirmed"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    </div>

    <!--6-->
    <div class="panel panel-default">
        <div class="panel-heading" role="tab" id="heading7">
            <h4 class="panel-title">
                <a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#collapse7" aria-expanded="false" aria-controls="collapse7">
                    @nameList[6] - Case count: @Model.Where(c => c.OwnerAlias == aliasList[6]).Count()
                </a>
            </h4>
        </div>
        <div id="collapse7" class="panel-collapse collapse" role="tabpanel" aria-labelledby="heading7">
            <div class="panel-body">
                                <h3 class="text-center" style="color:darkblue">Pending CTS</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[6] && m.WaitState == "Pending CTS"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Pending Customer</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[6] && m.WaitState == "Pending Customer"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Pending Development</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[6] && m.WaitState == "Pending Development"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Solution Delivered - Pending Confirmation</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[6] && m.WaitState == "Solution Delivered - Pending Confirmation"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Solution Delivered - Solution Confirmed</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[6] && m.WaitState == "Solution Delivered - Solution Confirmed"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    </div>

    <!--7-->
    <div class="panel panel-default">
        <div class="panel-heading" role="tab" id="heading8">
            <h4 class="panel-title">
                <a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#collapse8" aria-expanded="false" aria-controls="collapse8">
                    @nameList[7] - Case count: @Model.Where(c => c.OwnerAlias == aliasList[7]).Count()
                </a>
            </h4>
        </div>
        <div id="collapse8" class="panel-collapse collapse" role="tabpanel" aria-labelledby="heading8">
            <div class="panel-body">
                                <h3 class="text-center" style="color:darkblue">Pending CTS</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[7] && m.WaitState == "Pending CTS"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Pending Customer</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[7] && m.WaitState == "Pending Customer"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Pending Development</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[7] && m.WaitState == "Pending Development"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Solution Delivered - Pending Confirmation</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[7] && m.WaitState == "Solution Delivered - Pending Confirmation"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Solution Delivered - Solution Confirmed</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[7] && m.WaitState == "Solution Delivered - Solution Confirmed"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    </div>

    <!--8-->
    <div class="panel panel-default">
        <div class="panel-heading" role="tab" id="heading9">
            <h4 class="panel-title">
                <a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#collapse9" aria-expanded="false" aria-controls="collapse9">
                    @nameList[8] - Case count: @Model.Where(c => c.OwnerAlias == aliasList[8]).Count()
                </a>
            </h4>
        </div>
        <div id="collapse9" class="panel-collapse collapse" role="tabpanel" aria-labelledby="heading9">
            <div class="panel-body">
                                <h3 class="text-center" style="color:darkblue">Pending CTS</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[8] && m.WaitState == "Pending CTS"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Pending Customer</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[8] && m.WaitState == "Pending Customer"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Pending Development</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[8] && m.WaitState == "Pending Development"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Solution Delivered - Pending Confirmation</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[8] && m.WaitState == "Solution Delivered - Pending Confirmation"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Solution Delivered - Solution Confirmed</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[8] && m.WaitState == "Solution Delivered - Solution Confirmed"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    </div>

    <!--9-->
    <div class="panel panel-default">
        <div class="panel-heading" role="tab" id="heading10">
            <h4 class="panel-title">
                <a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#collapse10" aria-expanded="false" aria-controls="collapse10">
                    @nameList[9] - Case count: @Model.Where(c => c.OwnerAlias == aliasList[9]).Count()
                </a>
            </h4>
        </div>
        <div id="collapse10" class="panel-collapse collapse" role="tabpanel" aria-labelledby="heading10">
            <div class="panel-body">
                                <h3 class="text-center" style="color:darkblue">Pending CTS</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[9] && m.WaitState == "Pending CTS"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Pending Customer</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[9] && m.WaitState == "Pending Customer"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Pending Development</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[9] && m.WaitState == "Pending Development"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Solution Delivered - Pending Confirmation</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[9] && m.WaitState == "Solution Delivered - Pending Confirmation"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Solution Delivered - Solution Confirmed</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[9] && m.WaitState == "Solution Delivered - Solution Confirmed"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    </div>

    <!--10-->
    <div class="panel panel-default">
        <div class="panel-heading" role="tab" id="heading11">
            <h4 class="panel-title">
                <a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#collapse11" aria-expanded="false" aria-controls="collapse11">
                    @nameList[10] - Case count: @Model.Where(c => c.OwnerAlias == aliasList[10]).Count()
                </a>
            </h4>
        </div>
        <div id="collapse11" class="panel-collapse collapse" role="tabpanel" aria-labelledby="heading11">
            <div class="panel-body">
                                <h3 class="text-center" style="color:darkblue">Pending CTS</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[10] && m.WaitState == "Pending CTS"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Pending Customer</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[10] && m.WaitState == "Pending Customer"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Pending Development</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[10] && m.WaitState == "Pending Development"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Solution Delivered - Pending Confirmation</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[10] && m.WaitState == "Solution Delivered - Pending Confirmation"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Solution Delivered - Solution Confirmed</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[10] && m.WaitState == "Solution Delivered - Solution Confirmed"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    </div>

    <!--11-->
    <div class="panel panel-default">
        <div class="panel-heading" role="tab" id="heading12">
            <h4 class="panel-title">
                <a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#collapse12" aria-expanded="false" aria-controls="collapse12">
                    @nameList[11] - Case count: @Model.Where(c => c.OwnerAlias == aliasList[11]).Count()
                </a>
            </h4>
        </div>
        <div id="collapse12" class="panel-collapse collapse" role="tabpanel" aria-labelledby="heading12">
            <div class="panel-body">
                                <h3 class="text-center" style="color:darkblue">Pending CTS</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[11] && m.WaitState == "Pending CTS"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Pending Customer</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[11] && m.WaitState == "Pending Customer"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Pending Development</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[11] && m.WaitState == "Pending Development"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Solution Delivered - Pending Confirmation</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[11] && m.WaitState == "Solution Delivered - Pending Confirmation"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Solution Delivered - Solution Confirmed</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[11] && m.WaitState == "Solution Delivered - Solution Confirmed"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    </div>

    <!--12-->
    <div class="panel panel-default">
        <div class="panel-heading" role="tab" id="heading13">
            <h4 class="panel-title">
                <a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#collapse13" aria-expanded="false" aria-controls="collapse13">
                    @nameList[12] - Case count: @Model.Where(c => c.OwnerAlias == aliasList[12]).Count()
                </a>
            </h4>
        </div>
        <div id="collapse13" class="panel-collapse collapse" role="tabpanel" aria-labelledby="heading13">
            <div class="panel-body">
                                <h3 class="text-center" style="color:darkblue">Pending CTS</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[12] && m.WaitState == "Pending CTS"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Pending Customer</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[12] && m.WaitState == "Pending Customer"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Pending Development</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[12] && m.WaitState == "Pending Development"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Solution Delivered - Pending Confirmation</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[12] && m.WaitState == "Solution Delivered - Pending Confirmation"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
                                <h3 class="text-center" style="color:darkblue">Solution Delivered - Solution Confirmed</h3>
                <table class="table table-bordered table-striped table-responsive">
                    <tr>
                        <td>Case ID</td>
                        <td>SR Title</td>
                        <td>Last Communication</td>
                        <td>Days Open</td>
                        <td>Labor</td>
                        <td>Idle Days</td>
                    </tr>
                    @foreach (var item in Model.Where(m => m.OwnerAlias == aliasList[12] && m.WaitState == "Solution Delivered - Solution Confirmed"))
                    {
                        <tr>
                            <td>@Html.DisplayFor(p => item.CaseId)</td>
                            <td>@Html.DisplayFor(p => item.CaseTitle)</td>
                            <td>@Html.DisplayFor(p => item.LastCommTime)</td>
                            <td>@Html.DisplayFor(p => item.OpenDays)</td>
                            <td>@Html.DisplayFor(p => item.Labor)</td>
                            <td>@Html.DisplayFor(p => item.IdleDays)</td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    </div>
</div>